@model WebSharedModels.Dtos.Rating.ProductRatingDto

    <!-- Rating Summary Section -->
    <div class="mb-8">
        <h2 class="text-2xl font-bold mb-4">Customer Reviews</h2>
        
        <div class="flex items-center mb-4">
            <div class="flex items-center">
                @for (int i = 1; i <= 5; i++)
                {
                    if (i <= Math.Round(Model.Summary.AverageRating))
                    {
                        <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                        </svg>
                    }
                    else
                    {
                        <svg class="w-5 h-5 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                        </svg>
                    }
                }
                <span class="text-xl font-bold ml-2">@Model.Summary.AverageRating.ToString("0.0")</span>
                <span class="text-gray-500 ml-2">(@Model.Summary.TotalRating reviews)</span>
            </div>
        </div>
        
        <!-- Rating Distribution -->
        <div class="space-y-2">
            @{
                var stars = new[] 
                { 
                    new { Label = "5 stars", Count = Model.Summary.FiveStar },
                    new { Label = "4 stars", Count = Model.Summary.FourStar },
                    new { Label = "3 stars", Count = Model.Summary.ThreeStar },
                    new { Label = "2 stars", Count = Model.Summary.TwoStar },
                    new { Label = "1 star", Count = Model.Summary.OneStar }
                };
            }

            @foreach (var star in stars)
            {
                var percentage = Model.Summary.TotalRating > 0 ? (star.Count * 100.0 / Model.Summary.TotalRating) : 0;
                
                <div class="flex items-center">
                    <span class="text-sm font-medium text-gray-700 w-16">@star.Label</span>
                    <div class="flex-1 h-4 mx-2 bg-gray-200 rounded">
                        <div class="h-4 bg-yellow-400 rounded" style="width: @percentage%"></div>
                    </div>
                    <span class="text-sm font-medium text-gray-700 w-10">@star.Count</span>
                </div>
            }
        </div>
    </div>
    
    <!-- Review List Section -->

    <div id="reviews-container" class="border-t border-gray-200 pt-6">
        <h3 class="text-xl font-semibold mb-4">Customer Comments</h3>
        
        @if (Model.Ratings.Items.Any())
        {
            <div class="space-y-6">
                @foreach (var rating in Model.Ratings.Items)
                {
                    <div class="border-b border-gray-200 pb-4">
                        <div class="flex items-center mb-2">
                            @if (!string.IsNullOrEmpty(rating.Avatar))
                            {
                                <img src="@rating.Avatar" alt="@rating.UserName" class="w-10 h-10 rounded-full mr-3" />
                            }
                            else
                            {
                                <div class="w-10 h-10 rounded-full bg-gray-300 flex items-center justify-center mr-3">
                                    <span class="text-gray-600 font-semibold">@(rating.UserName.Length > 0 ? rating.UserName[0].ToString().ToUpper() : "U")</span>
                                </div>
                            }
                            <div>
                                <p class="font-semibold">@rating.UserName</p>
                                <div class="flex">
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        if (i <= rating.Rating)
                                        {
                                            <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                            </svg>
                                        }
                                        else
                                        {
                                            <svg class="w-4 h-4 text-gray-300" fill="currentColor" viewBox="0 0 20 20">
                                                <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118l-2.8-2.034c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                            </svg>
                                        }
                                    }
                                    <span class="text-xs text-gray-500 ml-2">@(rating.CreatedAt?.ToString("MMM dd, yyyy") ?? "")</span>
                                </div>
                            </div>
                        </div>
                        <p class="text-gray-700">@rating.Comment</p>
                    </div>
                }
            </div>
            
            <!-- Pagination -->
            @if (Model.Ratings.TotalPages > 0)
            {
                <div class="flex justify-center mt-6">
                    <nav class="relative z-0 inline-flex shadow-sm">
                        @{
                            int productId = Model.Summary.ProductId;
                            int currentPage = Model.Ratings.PageNumber;
                            int totalPages = Model.Ratings.TotalPages;
                        }
                        
                        @if (Model.Ratings.HasPreviousPage)
                        {
                            <div onclick="handleRatingPageClick(@(Model.Ratings.PageNumber - 1))" class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Previous</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                                </svg>
                            </div>
                        }

                        @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                        {
                            <div  
                                onclick="handleRatingPageClick(@i)"
                                class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium @(i == currentPage ? "text-indigo-600 bg-indigo-50" : "text-gray-700 hover:bg-gray-50")">
                                @i
                            </div>
                        }

                        @if (Model.Ratings.HasNextPage)
                        {
                            <div onclick="handleRatingPageClick(@(Model.Ratings.PageNumber + 1))" class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50">
                                <span class="sr-only">Next</span>
                                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                                </svg>
                            </div>
                        }
                    </nav>
                </div>
            }
        }
        else
        {
            <div class="text-center py-8">
                <p class="text-gray-500">No reviews yet. Be the first to review this product!</p>
            </div>
        }
    </div>
    

