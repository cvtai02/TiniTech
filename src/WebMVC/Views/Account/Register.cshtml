@{
    ViewData["Title"] = "Register";
}

<div class="flex min-h-screen justify-center bg-gray-50">
    <div class="flex flex-col justify-center flex-1 px-4 py-8">
        <div class="w-full max-w-sm mx-auto justify-center lg:w-96">
            <div>
                <h2 class="text-3xl font-bold tracking-tight text-gray-900">Create a new account</h2>
                <p class="mt-2 text-sm text-gray-600">
                    Or
                    <a href="/Login" class="font-medium text-primary hover:text-primary">sign in to your existing account</a>
                </p>
            </div>

            <div class="mt-8">
                <!-- Error alert -->
                <div id="error-container" class="hidden p-4 mb-4 rounded-md bg-red-50">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                            </svg>
                        </div>
                        <div class="ml-3">
                            <h3 class="text-sm font-medium text-red-800" id="error-title">Error</h3>
                            <div class="mt-2 text-sm text-red-700">
                                <p id="error-message"></p>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Success message -->
                <div id="success-container" class="hidden p-4 mb-4 rounded-md bg-green-50">
                    <div class="flex">
                        <div class="flex-shrink-0">
                            <svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
                                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                            </svg>
                        </div>
                        <div class="ml-3">
                            <h3 class="text-sm font-medium text-green-800">Registration Successful!</h3>
                            <div class="mt-2 text-sm text-green-700">
                                <p>Your account has been created successfully.</p>
                            </div>
                            <div class="mt-4">
                                <a href="/account/login" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-black hover:bg-gray-800 focus:outline-none">
                                    Go to Login
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="form-container" class="mt-6">
                    <form id="registerForm" class="space-y-6">
                        <div>
                            <label for="name" class="block text-sm font-medium leading-6 text-gray-900">Full name</label>
                            <div class="mt-2">
                                <input id="name" value="Chu Tai" name="name" type="text" autocomplete="name" required class="block w-full ps-3 rounded-md border-0 py-1.5 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary sm:text-sm sm:leading-6">
                            </div>
                        </div>

                        <div>
                            <label for="email" class="block text-sm font-medium leading-6 text-gray-900">Email address</label>
                            <div class="mt-2">
                                <input id="email" value="cvtai02@gmail.com" name="email" type="email" autocomplete="email" required class="block w-full ps-3 rounded-md border-0 py-1.5 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary sm:text-sm sm:leading-6">
                            </div>
                        </div>

                        <div>
                            <label for="password" class="block text-sm font-medium leading-6 text-gray-900">Password</label>
                            <div class="mt-2">
                                <input id="password" value="string" name="password" type="password" autocomplete="new-password" required class="block ps-3 w-full rounded-md border-0 py-1.5 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary sm:text-sm sm:leading-6">
                            </div>
                        </div>

                        <div>
                            <label for="confirmPassword" class="block text-sm font-medium leading-6 text-gray-900">Confirm password</label>
                            <div class="mt-2">
                                <input id="confirmPassword" value="string" name="confirmPassword" type="password" autocomplete="new-password" required class="block ps-3 w-full rounded-md border-0 py-1.5 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-primary sm:text-sm sm:leading-6">
                            </div>
                        </div>

                        <div>
                            <button 
                            type="submit" 
                            class="flex w-full justify-center rounded-md px-3 py-1.5 text-sm font-semibold 
                            leading-6 text-white bg-black
                            transition duration-300 hover:bg-gray-800 ring-1 ring-black">Register</button>
                        </div>
                    </form>
                </div>

                <div class="mt-6">
                    <div class="relative">
                        <div class="absolute inset-0 flex items-center">
                            <div class="w-full border-t border-gray-300"></div>
                        </div>
                        <div class="relative flex justify-center text-sm">
                            <span class="bg-gray-50 px-2 text-gray-500">Or continue with</span>
                        </div>
                    </div>

                    <div class="mt-6">
                        <a href="/auth/google" class="flex w-full items-center justify-center gap-3 rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-black hover:bg-gray-100 focus-visible:ring-transparent">
                            <svg class="h-5 w-5" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12.545,10.239v3.821h5.445c-0.712,2.315-2.647,3.972-5.445,3.972c-3.332,0-6.033-2.701-6.033-6.032s2.701-6.032,6.033-6.032c1.498,0,2.866,0.549,3.921,1.453l2.814-2.814C17.503,2.988,15.139,2,12.545,2C7.021,2,2.543,6.477,2.543,12s4.478,10,10.002,10c8.396,0,10.249-7.85,9.426-11.748L12.545,10.239z"></path>
                            </svg>
                            Google
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const registerForm = document.getElementById('registerForm');
        const errorContainer = document.getElementById('error-container');
        const errorTitle = document.getElementById('error-title');
        const errorMessage = document.getElementById('error-message');
        const successContainer = document.getElementById('success-container');
        const formContainer = document.getElementById('form-container');

        registerForm.addEventListener('submit', async function(e) {
            e.preventDefault();
            
            // Hide any previous error messages
            errorContainer.classList.add('hidden');
            
            // Password confirmation validation
            const password = document.getElementById('password').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            if (password !== confirmPassword) {
                errorTitle.textContent = 'Validation Error';
                errorMessage.textContent = 'Password and confirm password do not match.';
                errorContainer.classList.remove('hidden');
                return;
            }
            
            // Create registration data object
            const registerData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                password: password
            };
            
            try {
                const response = await apiFetch('/api/account/register', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(registerData)
                });
                
                const data = await response.json();
                
                if (response.ok) {
                    // Show success message and hide the form
                    formContainer.classList.add('hidden');
                    successContainer.classList.remove('hidden');
                } else {
                    // Display error message
                    errorTitle.textContent = data.title || 'Registration Failed';
                    
                    if (data.errors) {
                        // Format validation errors
                        const errorMessages = [];
                        for (const key in data.errors) {
                            errorMessages.push(data.errors[key].join('<br>'));
                        }
                        errorMessage.innerHTML = errorMessages.join('<br>');
                    } else {
                        errorMessage.textContent = data.detail || 'An error occurred during registration.';
                    }
                    
                    errorContainer.classList.remove('hidden');
                }
            } catch (error) {
                errorTitle.textContent = 'Registeration Failed';
                errorMessage.textContent = error.message;
                errorContainer.classList.remove('hidden');
            }
        });
    });
</script>
